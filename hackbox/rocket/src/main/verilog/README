in order for your verilog to be synthesized into the ROCC,
it needs to have the following conditions:
1) n inputs, one output.
2) all ports are 64 bits wide
3) the circuit is purely combinational (clk on next iteration, or add it to Top.HackBoxFPGAConfig.v before bitstream synthesis with Vivado)
4) the names of the ports should be declared as follows:
	
module <module name>(
	input [63: 0] io_in_0,
	input [63: 0] io_in_1, 
	...
	output [63: 0] io_out_0,
	output [63: 0] io_out_1,
	...
	);
...
endmodule


5. Keep in mind that when your verilog is applied to the accumulator, your inputs will read from registers 0, 1, etc
according to the numbers appended to the port name, likewise, the outputs will push their values 
into the corresponding registers when the doAccum function is used on the Accumulator.

After your verilog is according to these rules and is in this folder,
proceed to ../python/ and follow the README
